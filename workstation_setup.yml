---

- hosts: localhost
  vars:
    rpmfusion_rpm: "http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"

  tasks:
  
  - name: create python -> python3 symlink
    file:
      src: /usr/bin/python3
      dest: /usr/bin/python
      state: link
    become: true
    ignore_errors: true
    tags: os

  - name: Check if RPMfusion already set
    shell:            /bin/rpm -q --quiet rpmfusion-free-release && echo installed || echo missing
    args:             
      warn: false
    register:         rpmfusion
    tags: repo

  - name: setup RPMfusion repository
    command: yum localinstall -y --nogpgcheck {{ rpmfusion_rpm }}
    when: ansible_distribution == "Fedora" and rpmfusion.stdout == "missing"
    become: true
    tags: repo

  - name: Install other useful packages
    dnf: 
      name: 
      - bat
      - exa
      - htop
      - ack
      - task
      - fping
      - nmap
      - sysstat
      - expect
      - jq
      - strace
      - screen
      - rdesktop
      - vim
      - prettyping
      - geany
      - terminator
      - python3-black
      - python3-pandas
      - keepassxc
      - gkrellm
      - vlc
      - gnome-tweaks
      - gnome-shell
      state: latest
    become: true
    tags: pkgs

  - name: setup some expected dirs
    file:
      dest: "{{ item }}"
      state: directory
    loop:
    - "~/.privIncludes/"
    - "~/git/"
    tags: 
    - git
    - bash

  - name: setup my workstation setup repo
    git:
      repo: https://github.com/MorzeBaltyk/workstation_setup.git
      dest: ~/git/workstation_setup
      update: no # We just need to make sure it's there
    tags: git

  - name: setup .bash_profile
    file:
      src: ~/git/workstation_setup/.bash_profile
      dest: ~/.bash_profile
      state: link
      force: true
    tags: bash

  - name: setup .bashIncludes
    file:
      src: ~/git/workstation_setup/.bashIncludes
      dest: ~/.bashIncludes
      state: link
    tags: bash

  - name: setup .bashrc
    file:
      src: ~/git/workstation_setup/.bashrc
      dest: ~/.bashrc
      state: link
    tags: bash

    # Make it more simple with above task
    # ###################################
    #
    #  - name: delete .bashrc if it exists
    #file:
    #  dest: ~/.bashrc
    #  state: absent
    #tags: bash
    #
    #  - name: setup basic vars in new .bashrc
    #lineinfile:
    #  path: ~/.bashrc
    #  line: "{{ item }}"
    #  create: true
    #loop:
    #- "# Bashrc should be only for local Desktop,"
    #- "# HomeDir shared with NFS, so a double check is necessary"
    #- "if [ ${HOSTNAME%%.*} == 'digiop3' ]"
    #- "then"
    #- "  export BIN=~/git/workstation_setup/bin"
    #- "  export PRIV_DESKTOP={{ansible_hostname}}"
    #- "  export SERV_ACC={{ansible_user_id}}  #Change this to the account you use to login to other hosts if your not your local username (e.g. root)"
    #- "  shopt -q login_shell || source ~/.bash_profile  #We don't want to end up in an infinite loop"
    #- "  [[ -r ~/.bash_completion ]] && source ~/.bash_completion  #If you have a bash_completion source, put it here"
    #- "  [[ -f /usr/bin/exa ]] && alias ls='exa --git'  #Uncomment to use exa instead of ls"
    #- "  [[ -f /usr/bin/exa ]] && alias ll='exa --git -larsold'  #Uncomment to use exa instead of ls"
    #- "  #alias cd='pushd >/dev/null'  #Uncomment to use popd instead of cd"
    #- "  [[ -f /usr/bin/prettyping ]] && alias ping='prettyping'"
    #- "  [[ -f /usr/bin/vimdiff ]] && alias diff='vimdiff'"
    #- "  #alias top='htop'  #Commented in .bashrc if you're not using screenFunctions.bash"
    #- "  alias rsync='rsync --info=progress2'"
    #- "  [[ -f /usr/bin/bat ]] && alias cat='bat'"
    #- "fi"
    #tags: bash


  - name: setup .screenrc
    file:
      src: ~/git/workstation_setup/.screenrc
      dest: ~/.screenrc
      state: link
    tags: screen

  - name: create .screenrc logs directory
    file:
      dest: ~/.Screenlogs
      state: directory
    tags: screen
